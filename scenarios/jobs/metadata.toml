name = "Job Recommender Pro" 
purpose = """to match candidates who are likely to perform well in a role to
roles that are suited to their qualifications and experience."""
operation = """The system recommends advertised roles to individual users on
the platform. The recommended roles should suit the user's field, skills and
experience."""

data = """Inputs to the model are attributes of the user such as
qualifications, years of experience, skills etc. and attributes of the role
such as experience and qualifications required, salary etc. There is also
historical information about which users applied and were interviewed for
previously advertised roles."""

decision_rules = """Threshold(s) on the match scores output from the ML model,
above which the role is recommended to the user."""

candidates = """Candidate models have been generated by match score threshold
sweeps."""

primary_metric = "precision"  # This has to refer to a metric

[actions]
recommend = """Recommend the role to selected users on their platform home
page."""
  
[targets]
interviewed = """The user applied for the role and was interviewed by 
the organisation for the role."""
  
[objectives.shortlist_suitable_candidates]
name = "Shortlist Appropriate Candidates"
description = "Ensure that candidates shortlisted for the role are suitable."

[objectives.minimise_missing_out]
name = "Minimise Missing Out"
description = """Minimise the chance suitable candidates will miss out on
being recommended a role."""

[objectives.dont_disadvantage_women]
name = "Don't Disadvantage Women"
description = """Ensure the system does not make women miss out on suitable
role recommendations more than average."""

[metrics.precision]
    name = "Correctly shortlisted candidates"
    icon = "shortlist.png"
    captures = ["shortlist_suitable_candidates"]
    limitations = """Does not consider if the candidates will actually be hired
    for the role, only that they may be interviewed."""
    description = """Number of candidates shortlisted per 100 who are suitable
    for the role."""
    more = "more"
    less = "fewer"
    prefix = ""
    suffix = "candidates per 100 suitable"
    action = "recommend{s}"
    lowerIsBetter = false
    displayDecimals = 0
    countable = true
    type = "quantitative" # type determines how options are presented to the user
                          # omitting type sets the default to quantitative

    range_min = 0
    range_max = 100

[metrics.fnr]
    name = "Proportion of suitable candidates missed"
    captures = ["minimise_missing_out"]
    limitations = """False negatives (missed candidates) are difficult to
    capture if the training data is from an existing AI system."""
    icon = "missout.png"
    description = """Proportion of candidates who were suitable for the role
    but were missed by the system."""
    more = "more"
    less = "fewer"
    prefix = ""
    suffix = "candidates per 100 suitable"
    action = "missed"
    displayDecimals = 0
    countable = true

    range_min = 0
    range_max = 100

[metrics.fnr_difference]
    name = "Inequality of missing out"
    icon = "fairness.png"
    description = """Difference in proportion of women missing out on
    being recommended roles they are suited to compared to the average."""
    captures = ["dont_disadvantage_women"]
    limitations = """Sensitive to bias against interviewing women in historical
    data."""
    more = "more"
    less = "fewer"
    prefix = ""
    suffix = "fewer suitable women than the average per 100 candidates"
    action = "recommends"
    displayDecimals = 0
    countable = true

    range_min = 0
    range_max = 100

[metrics.privacy_level]
    name = "feature use"
    icon = "fairness.png"
    description = """Level of private data used in the training set"""
    captures = ["shortlist_suitable_candidates"]
    limitations = """no actual distinguishing"""
    type = "qualitative"
    
    # the values for the options are 0... n-1 respectively
    # options should include a verb
    options = ["only uses public data", "requires some private data", "exclusively uses private data"] 

    # for comparison between two systems
    comparison_better = "uses less personal data than" 
    comparison_worse = "uses more personal data than"
    comparison_equal = "uses the same amount of personal data as"

    isMetric = false
