# Copyright 2021-2022 Gradient Institute Ltd. <info@gradientinstitute.org>

name = "Job Match Recommender" 
purpose = """Match candidates to roles that they want to apply for and have 
suitable qualifications and experience for."""
operation = """The system recommends advertised roles to individual users on
the platform. The recommended roles should suit the user's field, skills and
experience."""

data = """Inputs to the model are attributes of the user such as their 
qualifications, years of experience and skills, and attributes of the role
such as experience, qualifications required and salary. There is also
historical information about which users applied and were interviewed for
previously advertised roles."""

decision_rules = """If the predictive score from the ML model is above a 
threshold, the role is recommended to the user."""

candidates = """Candidate models have been generated by model parameter and 
threshold sweeps."""

primary_metric = "precision"  # This has to refer to a metric

[actions]
recommend = """Selected users are shown matched roles to apply for on 
their platform home page."""
  
[targets]
interview = """The user applies for the role and gets an interview."""
  
[objectives.shortlist_suitable_applicants]
name = "Successfully Match Applicants to Roles"
description = """Show applicants recommendations that they will likely apply 
for and get an interview."""

[objectives.minimise_missing_out]
name = "Oportunities for Qualified Applicants"
description = """Avoid overlooking applicants for a role that they are 
suitable for."""

[objectives.dont_disadvantage_women]
name = "Don't Disadvantage Women"
description = """Ensure the system does not systemically overlook women for 
roles they are suitable for."""

[objectives.minimal_private_data]
name = "Minimal Use of Private Customer Data"
description = """Avoid using private customer data as inputs to the predictive 
model."""


[metrics.precision]
name = "Number of Interviews"
benefit = "Successful Matches"
icon = "shortlist.png"
captures = ["shortlist_suitable_applicants"]
limitations = """Recording a successful match does not mean that the applicants 
are actually hired for the role, only that they got an interview."""
description = """Number of recommendations that lead to an interview."""
more = "more"
less = "fewer"
prefix = ""
suffix = " interviews per 100 matches"
scrollbar = " interviews per 100 matches"
action = "instigates "
compare = " more interviews per 100 matches than"
lowerIsBetter = false
displayDecimals = 0
type = "quantitative" # type determines how options are presented to the user
                        # omitting type sets the default to quantitative

range_min = 0
range_max = 100

[metrics.fnr]
name = "Overlooked Suitable Applicants"
benefit = "Inclusiveness"
captures = ["minimise_missing_out"]
limitations = """False negatives (missed applicants) are difficult to
capture if the training data is from an existing AI system."""
icon = "missout.png"
description = """Number of suitable applicants who were overlooked by the 
system."""
more = "more"
less = "fewer"
prefix = ""
suffix = " of every 100 suitable applicants"
scrollbar = " of every 100 suitable applicants are overlooked"
compare = " more suitable applicants per 100 suitable applicants than"
action = "overlooks"
displayDecimals = 0

range_min = 0
range_max = 100

[metrics.fn_parity]
name = "Overlooked Suitable Women"
benefit = "Fairness"
icon = "fairness.png"
description = """Number of overlooked suitable women per 100 suitable 
overlooked applicants (50 is most fair)."""
captures = ["dont_disadvantage_women"]
limitations = """Sensitive to historical bias if suitable women weren't 
interviewed in the training data, and sensitive to the fraction of applicants 
who are women."""
more = "more"
less = "fewer"
prefix = ""
compare = " fewer suitable women per 100 overlooked applicants than"
scrollbar = " of every 100 overlooked suitable applicants are women"
action = " overlooks "
suffix = " suitable women per 100 suitable applicants overlooked"
displayDecimals = 0

range_min = 0
range_max = 100

[metrics.privacy_level]
name = "Use of Private Data"
benefit = "Privacy Level"
icon = "fairness.png"
description = """Level of private data used in the training set"""
captures = ["minimal_private_data"]
limitations = """Excluding private data does not ensure that outcomes are fair 
with respect to excluded attributes."""
type = "qualitative"

# the values for the options are 0... n-1 respectively
# options should include a verb
options = ["only uses public data", "requires some private data",
           "extensively uses private data"] 

# for comparison between two systems
comparison_better = "uses less personal data than" 
comparison_worse = "uses more personal data than"
comparison_equal = "uses the same amount of personal data as"

range_min = 0
range_max = 2
