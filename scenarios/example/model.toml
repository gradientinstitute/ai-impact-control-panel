## EXAMPLE MODEL CONFIG

# if <model>.ranges section is defined, this gives the number of draws
n_range_draws = 3

# These are the metrics to be run on the model outputs. The header names should
# match those defined in metrics_dict defined in score.py
[metrics]
[metrics.auc]
name = "Area under the ROC curve"
[metrics.accuracy]
name = "Accuracy"

# The name here must match the dictionary entry in deva/model.py iter_models
# function. This tells the program what model you want to use.  In this
# section, put default hyperparametrs that will apply to all draws. They may be
# overwritten by lower sections.
[logistic]
fit_intercept = true
random_state = 666
class_weight = 'balanced'

# These will be sampled uniformly and appended (possibly overwriting) the
# defaults above. The number of samples is controlled by n_range_draws.
# For every value, give a [min, max]
[logistic.ranges]
tol = [1e-4, 1e-3]

# this is a custom (non-scikit) workaround for not being able to use
# integer keys in toml configs
positive_class_weight = [1, 20]

# These will be combinatorically gone through -- every combination of lists
# entries in this section will result in a unique hyperparameter set. Again,
# they will be appended (possibly overwriting) the defaults above
[logistic.lists]
random_state = [111, 222, 333, 444]

# These are instances, they will be added to the runs as-is, (after appending
# and possibly overwriting the defaults)
# The name of the instance here is 'set1'
[logistic.instances.set1]
random_state = 1
tol = 1.1e-4
positive_class_weight = 20

# This is another instance: 'set2'
[logistic.instances.set2]
random_state = 2
tol = 1.2e-4
positive_class_weight = 10
